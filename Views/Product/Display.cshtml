@model ProductDisplayViewModel
@using _3.QKA_DACK.Models.ProductModels
@{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <!-- Product Information -->
                    <div class="row">
                        <div class="col-md-6 text-center">
                            @if (!string.IsNullOrEmpty(Model.Product.ImageUrl))
                            {
                                <img src="@Model.Product.ImageUrl" alt="Product Image" class="img-fluid rounded" style="max-width: 100%; height: auto;">
                            }
                            else
                            {
                                <img src="~/images/placeholder.png" alt="Placeholder Image" class="img-fluid rounded" style="max-width: 100%; height: auto;">
                            }
                        </div>
                        <div class="col-md-6">
                            <h2 class="card-title">@Model.Product.Name</h2>
                            <hr />
                            <h3 class="text-danger">Price: @Model.Product.Price.ToString("C")</h3>
                            <p class="card-text"><strong>Description:</strong> @Model.Product.Description</p>

                            @if (User.Identity.IsAuthenticated)
                            {
                                <!-- Add to Cart Form -->
                                <form asp-area="" asp-action="AddToCart" method="post">
                                    <input type="hidden" name="productId" value="@Model.Product.Id" />
                                    <div class="form-group">
                                        <label for="quantity">Quantity</label>
                                        <input type="number" name="quantity" id="quantity" class="form-control" value="1" min="1" />
                                    </div>
                                    <button type="submit" class="btn btn-primary btn-block">Add to Cart</button>
                                </form>
                            }
                            else
                            {
                                <div class="alert alert-warning mt-3">
                                    Please <a href="/Identity/Account/Login?returnUrl=@Context.Request.Path">log in</a> to add this product to your cart.
                                </div>
                            }


                        </div>
                    </div>

                    <!-- Back to List Button -->
                    <div class="text-center mt-3">
                        <a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-secondary">Back to Home</a>

                    </div>

                    <!-- Product Reviews -->
                    <h3 class="mt-4">Reviews</h3>
                    @if (Model.Reviews != null && Model.Reviews.Any())
                    {
                        <div class="reviews">
                            @foreach (var review in Model.Reviews)
                            {
                                <div class="review mt-3 p-3 border rounded">
                                    <strong>@review.User.UserName</strong> -
                                    @for (int i = 1; i <= review.Rating; i++)
                                    {
                                        <span class="text-warning">★</span>
                                    }
                                    @for (int i = review.Rating + 1; i <= 5; i++)
                                    {
                                        <span class="text-muted">☆</span>
                                    }
                                    <p>@review.Comment</p>
                                    <small class="text-muted">@review.CreatedAt.ToString("dd/MM/yyyy")</small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p>No reviews for this product yet.</p>
                    }

                    <!-- Add Review Form -->
                    <h4 class="mt-4">Add a Review</h4>
                    <form method="post" action="@Url.Action("AddReview", "Product")">
                        <input type="hidden" name="ProductId" value="@Model.Product.Id" />
                        <div class="form-group">
                            <label for="rating">Rating</label>
                            <div class="star-rating">
                                <input type="radio" name="Rating" id="star5" value="5" />
                                <label for="star5" class="fa fa-star"></label>
                                <input type="radio" name="Rating" id="star4" value="4" />
                                <label for="star4" class="fa fa-star"></label>
                                <input type="radio" name="Rating" id="star3" value="3" />
                                <label for="star3" class="fa fa-star"></label>
                                <input type="radio" name="Rating" id="star2" value="2" />
                                <label for="star2" class="fa fa-star"></label>
                                <input type="radio" name="Rating" id="star1" value="1" />
                                <label for="star1" class="fa fa-star"></label>
                            </div>
                        </div>
                        <div class="form-group">
                            <textarea name="Comment" class="form-control" placeholder="Add your comment..." required></textarea>
                        </div>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="submit" class="btn btn-primary">Submit Review</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-primary" onclick="redirectToLogin()">Submit Review</button>
                        }
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .star-rating {
        direction: rtl;
        display: inline-block;
        padding: 0;
    }

        .star-rating input[type="radio"] {
            display: none;
        }

        .star-rating label {
            font-size: 2em;
            color: #ddd;
            cursor: pointer;
        }

        .star-rating input[type="radio"]:checked ~ label {
            color: #f5b301;
        }

        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: #f5b301;
        }
</style>
@*<script>
    function redirectToLogin() {
        const returnUrl = window.location.pathname + window.location.search;
        window.location.href = '/Identity/Account/Login?returnUrl=' + encodeURIComponent(returnUrl);
    }
</script>*@

<script>
    function redirectToLogin() {
        // Lấy dữ liệu form
        const rating = document.querySelector('input[name="Rating"]:checked')?.value;
        const comment = document.querySelector('textarea[name="Comment"]').value;
        const productId = document.querySelector('input[name="ProductId"]').value;

        // Lưu dữ liệu vào localStorage
        localStorage.setItem('pendingReview', JSON.stringify({
            rating: rating,
            comment: comment,
            productId: productId
        }));

        // Chuyển đến login (giữ lại returnUrl)
        const returnUrl = window.location.pathname + window.location.search;
        window.location.href = 'Identity/Account/Login?returnUrl=' + encodeURIComponent(returnUrl);
    }

    // Sau khi quay lại từ login
    window.addEventListener('DOMContentLoaded', () => {
        const saved = localStorage.getItem('pendingReview');
        if (saved) {
            const review = JSON.parse(saved);

            if (review.rating) {
                const star = document.querySelector(`input[name="Rating"][value="${review.rating}"]`);
                if (star) star.checked = true;
            }

            if (review.comment) {
                const textarea = document.querySelector('textarea[name="Comment"]');
                if (textarea) textarea.value = review.comment;
            }

            if (review.productId) {
                const productInput = document.querySelector('input[name="ProductId"]');
                if (productInput) productInput.value = review.productId;
            }

            // Xóa khỏi localStorage sau khi load lại
            localStorage.removeItem('pendingReview');
        }
    });
</script>
